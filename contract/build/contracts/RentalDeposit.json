{
  "contractName": "RentalDeposit",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyLandlord",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyTenant",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "_claimValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "landlord",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remainingDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum RentalDeposit.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tenant",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tenantOffer",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "landlordAccept",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tenantTerminate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseDepositToTenant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_damageValue",
          "type": "uint256"
        }
      ],
      "name": "damageClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyLandlord\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyTenant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"_claimValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_damageValue\",\"type\":\"uint256\"}],\"name\":\"damageClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landlord\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landlordAccept\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseDepositToTenant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum RentalDeposit.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tenant\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tenantOffer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tenantTerminate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidState()\":[{\"notice\":\"The function cannot be called at the current state.\"}],\"OnlyLandlord()\":[{\"notice\":\"Ony the landlord can call this function\"}],\"OnlyTenant()\":[{\"notice\":\"Ony the tenant can call this function\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RentalDeposit.sol\":\"RentalDeposit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/RentalDeposit.sol\":{\"keccak256\":\"0x78f91f1a68299bd54db30e7be040327acd56a9aea1754201938f17e4f6733e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8116a23c176a2159359698d8332c7f2d61f5648ca2743f6acfa83f23cbcb824c\",\"dweb:/ipfs/QmPx3wdxY7MWsHXy3AdqSCjqY2KBvi8uv1m6YaokQ7QpJp\"]}},\"version\":1}",
  "bytecode": "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c21806100546000396000f3fe60806040526004361061009c5760003560e01c806398976094116100645780639897609414610155578063adf077911461016c578063bb06922514610197578063c19d93fb146101ae578063dc1997ea146101d9578063fb531a4f146102045761009c565b8063046b75fb146100a15780631caed6d4146100cc5780633fa4f245146100d6578063546eab0b14610101578063758c6dbf1461012a575b600080fd5b3480156100ad57600080fd5b506100b661021b565b6040516100c391906109c7565b60405180910390f35b6100d4610221565b005b3480156100e257600080fd5b506100eb610305565b6040516100f891906109c7565b60405180910390f35b34801561010d57600080fd5b5061012860048036038101906101239190610a13565b61030b565b005b34801561013657600080fd5b5061013f61050a565b60405161014c91906109c7565b60405180910390f35b34801561016157600080fd5b5061016a610510565b005b34801561017857600080fd5b5061018161069e565b60405161018e9190610a81565b60405180910390f35b3480156101a357600080fd5b506101ac6106c4565b005b3480156101ba57600080fd5b506101c3610852565b6040516101d09190610b13565b60405180910390f35b3480156101e557600080fd5b506101ee610865565b6040516101fb9190610a81565b60405180910390f35b34801561021057600080fd5b5061021961088b565b005b60035481565b600080600381111561023657610235610a9c565b5b600560009054906101000a900460ff16600381111561025857610257610a9c565b5b1461028f576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460008190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600560006101000a81548160ff021916908360038111156102fd576102fc610a9c565b5b021790555050565b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610392576040517f6dd80efb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060038111156103a7576103a6610a9c565b5b600560009054906101000a900460ff1660038111156103c9576103c8610a9c565b5b14610400576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b670de0b6b3a7640000826104149190610b5d565b60038190555060035460005461042a9190610bb7565b600481905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f1935050505015801561049a573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610505573d6000803e3d6000fd5b505050565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610597576040517f873cf48b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060038111156105ac576105ab610a9c565b5b600560009054906101000a900460ff1660038111156105ce576105cd610a9c565b5b14610605576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f1935050505015801561066f573d6000803e3d6000fd5b506003600560006101000a81548160ff0219169083600381111561069657610695610a9c565b5b021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074b576040517f6dd80efb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060038111156107605761075f610a9c565b5b600560009054906101000a900460ff16600381111561078257610781610a9c565b5b146107b9576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600560006101000a81548160ff021916908360038111156107df576107de610a9c565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f1935050505015801561084e573d6000803e3d6000fd5b5050565b600560009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610912576040517f6dd80efb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600381111561092757610926610a9c565b5b600560009054906101000a900460ff16600381111561094957610948610a9c565b5b14610980576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600560006101000a81548160ff021916908360038111156109a6576109a5610a9c565b5b021790555050565b6000819050919050565b6109c1816109ae565b82525050565b60006020820190506109dc60008301846109b8565b92915050565b600080fd5b6109f0816109ae565b81146109fb57600080fd5b50565b600081359050610a0d816109e7565b92915050565b600060208284031215610a2957610a286109e2565b5b6000610a37848285016109fe565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6b82610a40565b9050919050565b610a7b81610a60565b82525050565b6000602082019050610a966000830184610a72565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610adc57610adb610a9c565b5b50565b6000819050610aed82610acb565b919050565b6000610afd82610adf565b9050919050565b610b0d81610af2565b82525050565b6000602082019050610b286000830184610b04565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b68826109ae565b9150610b73836109ae565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bac57610bab610b2e565b5b828202905092915050565b6000610bc2826109ae565b9150610bcd836109ae565b925082821015610be057610bdf610b2e565b5b82820390509291505056fea264697066735822122054405dda5ecc54802d75d6390e736b215591d2c90585d4aacd00fd7d33d7fbac64736f6c634300080b0033",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c806398976094116100645780639897609414610155578063adf077911461016c578063bb06922514610197578063c19d93fb146101ae578063dc1997ea146101d9578063fb531a4f146102045761009c565b8063046b75fb146100a15780631caed6d4146100cc5780633fa4f245146100d6578063546eab0b14610101578063758c6dbf1461012a575b600080fd5b3480156100ad57600080fd5b506100b661021b565b6040516100c391906109c7565b60405180910390f35b6100d4610221565b005b3480156100e257600080fd5b506100eb610305565b6040516100f891906109c7565b60405180910390f35b34801561010d57600080fd5b5061012860048036038101906101239190610a13565b61030b565b005b34801561013657600080fd5b5061013f61050a565b60405161014c91906109c7565b60405180910390f35b34801561016157600080fd5b5061016a610510565b005b34801561017857600080fd5b5061018161069e565b60405161018e9190610a81565b60405180910390f35b3480156101a357600080fd5b506101ac6106c4565b005b3480156101ba57600080fd5b506101c3610852565b6040516101d09190610b13565b60405180910390f35b3480156101e557600080fd5b506101ee610865565b6040516101fb9190610a81565b60405180910390f35b34801561021057600080fd5b5061021961088b565b005b60035481565b600080600381111561023657610235610a9c565b5b600560009054906101000a900460ff16600381111561025857610257610a9c565b5b1461028f576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460008190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600560006101000a81548160ff021916908360038111156102fd576102fc610a9c565b5b021790555050565b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610392576040517f6dd80efb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060038111156103a7576103a6610a9c565b5b600560009054906101000a900460ff1660038111156103c9576103c8610a9c565b5b14610400576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b670de0b6b3a7640000826104149190610b5d565b60038190555060035460005461042a9190610bb7565b600481905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f1935050505015801561049a573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610505573d6000803e3d6000fd5b505050565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610597576040517f873cf48b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060038111156105ac576105ab610a9c565b5b600560009054906101000a900460ff1660038111156105ce576105cd610a9c565b5b14610605576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f1935050505015801561066f573d6000803e3d6000fd5b506003600560006101000a81548160ff0219169083600381111561069657610695610a9c565b5b021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074b576040517f6dd80efb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060038111156107605761075f610a9c565b5b600560009054906101000a900460ff16600381111561078257610781610a9c565b5b146107b9576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600560006101000a81548160ff021916908360038111156107df576107de610a9c565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f1935050505015801561084e573d6000803e3d6000fd5b5050565b600560009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610912576040517f6dd80efb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600381111561092757610926610a9c565b5b600560009054906101000a900460ff16600381111561094957610948610a9c565b5b14610980576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600560006101000a81548160ff021916908360038111156109a6576109a5610a9c565b5b021790555050565b6000819050919050565b6109c1816109ae565b82525050565b60006020820190506109dc60008301846109b8565b92915050565b600080fd5b6109f0816109ae565b81146109fb57600080fd5b50565b600081359050610a0d816109e7565b92915050565b600060208284031215610a2957610a286109e2565b5b6000610a37848285016109fe565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6b82610a40565b9050919050565b610a7b81610a60565b82525050565b6000602082019050610a966000830184610a72565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610adc57610adb610a9c565b5b50565b6000819050610aed82610acb565b919050565b6000610afd82610adf565b9050919050565b610b0d81610af2565b82525050565b6000602082019050610b286000830184610b04565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b68826109ae565b9150610b73836109ae565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bac57610bab610b2e565b5b828202905092915050565b6000610bc2826109ae565b9150610bcd836109ae565b925082821015610be057610bdf610b2e565b5b82820390509291505056fea264697066735822122054405dda5ecc54802d75d6390e736b215591d2c90585d4aacd00fd7d33d7fbac64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3721:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:1",
                "type": ""
              }
            ],
            "src": "7:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:1",
                "type": ""
              }
            ],
            "src": "90:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:1",
                "type": ""
              }
            ],
            "src": "214:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:1",
                "type": ""
              }
            ],
            "src": "442:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:1",
                "type": ""
              }
            ],
            "src": "769:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:1",
                "type": ""
              }
            ],
            "src": "897:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1154:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1156:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1156:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1156:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1129:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1118:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1247:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1262:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1291:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1326:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1337:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1346:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1301:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1291:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:1",
                "type": ""
              }
            ],
            "src": "1042:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1432:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1447:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1454:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1443:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1432:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1404:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1414:7:1",
                "type": ""
              }
            ],
            "src": "1377:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1562:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1572:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1601:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1583:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1583:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1572:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1544:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1554:7:1",
                "type": ""
              }
            ],
            "src": "1509:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1700:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1717:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1748:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1722:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1722:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1710:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1710:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1710:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1688:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1695:3:1",
                "type": ""
              }
            ],
            "src": "1619:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1881:140:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1891:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1903:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1914:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1899:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1899:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1891:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1987:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2000:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2011:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1996:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1996:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1927:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1927:87:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1927:87:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1853:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1865:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1876:4:1",
                "type": ""
              }
            ],
            "src": "1767:254:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2055:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2072:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2075:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2065:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2065:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2169:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2172:4:1",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2162:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2162:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2193:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2196:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2186:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2186:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2186:15:1"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2027:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2264:62:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2298:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "2300:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2300:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2300:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2287:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2294:1:1",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2284:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2284:12:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2277:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:20:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2274:46:1"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2257:5:1",
                "type": ""
              }
            ],
            "src": "2213:113:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2385:74:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2395:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2406:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2395:7:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2447:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$16",
                      "nodeType": "YulIdentifier",
                      "src": "2412:34:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2412:41:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2412:41:1"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2367:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2377:7:1",
                "type": ""
              }
            ],
            "src": "2332:127:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2531:61:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2541:45:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2580:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$16",
                      "nodeType": "YulIdentifier",
                      "src": "2554:25:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2554:32:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2541:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$16_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2511:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2521:9:1",
                "type": ""
              }
            ],
            "src": "2465:127:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2669:72:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2686:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2728:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$16_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2691:36:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2691:43:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2679:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2679:56:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2679:56:1"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$16_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2657:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2664:3:1",
                "type": ""
              }
            ],
            "src": "2598:143:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2851:130:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2861:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2873:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2884:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2869:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2869:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2861:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2947:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2960:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2971:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2956:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2956:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$16_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2897:49:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2897:77:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2897:77:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_State_$16__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2823:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2835:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2846:4:1",
                "type": ""
              }
            ],
            "src": "2747:234:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3015:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3032:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3035:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3025:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3025:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3025:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3129:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3132:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3122:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3122:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3122:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3153:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3156:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3146:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3146:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3146:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2987:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3221:300:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3231:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3254:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3236:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3236:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3231:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3265:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3288:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3270:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3270:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3265:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3463:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3465:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3465:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3465:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3375:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3368:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3368:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3361:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3361:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3383:1:1"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3390:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3458:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3386:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3386:74:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3380:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3380:81:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3357:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3357:105:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3354:131:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3495:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3510:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3513:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3506:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3506:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3495:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3204:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3207:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3213:7:1",
                "type": ""
              }
            ],
            "src": "3173:348:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3572:146:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3582:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3605:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3587:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3587:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3582:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3616:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3639:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3621:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3621:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3616:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3663:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3665:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3665:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3665:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3657:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3660:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3654:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3654:8:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3651:34:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3695:17:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3707:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3710:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3703:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3703:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3695:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3558:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3561:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3567:4:1",
                "type": ""
              }
            ],
            "src": "3527:191:1"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$16(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$16(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$16(value)\n    }\n\n    function convert_t_enum$_State_$16_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$16(value)\n    }\n\n    function abi_encode_t_enum$_State_$16_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$16_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_State_$16__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_State_$16_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "61:1971:0:-:0;;;456:10;437:8;;:30;;;;;;;;;;;;;;;;;;61:1971;;;;;;",
  "deployedSourceMap": "61:1971:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;192:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;922:176;;;:::i;:::-;;91:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1740:289;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;225:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:155;;;;;;;;;;;;;:::i;:::-;;156:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1572:162;;;;;;;;;;;;;:::i;:::-;;377:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;118:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1104:126;;;;;;;;;;;;;:::i;:::-;;192:26;;;;:::o;922:176::-;970:13;835:6;826:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;822:69;;865:14;;;;;;;;;;;;;;822:69;1004:9:::1;996:5;:17;;;;1041:10;1024:6;;:28;;;;;;;;;;;;;;;;;;1071:19;1063:5;;:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;922:176:::0;:::o;91:20::-;;;;:::o;1740:289::-;697:8;;;;;;;;;;;683:22;;:10;:22;;;679:76;;729:14;;;;;;;;;;;;;;679:76;1813:22:::1;835:6;826:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;822:69;;865:14;;;;;;;;;;;;;;822:69;1878:6:::2;1863:12;:21;;;;:::i;:::-;1848:11;:37;;;;1924:11;;1915:5;;:21;;;;:::i;:::-;1896:16;:40;;;;1947:8;;;;;;;;;;;:17;;:30;1965:11;;1947:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;1988:6;;;;;;;;;;;:15;;:33;2004:16;;1988:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;765:1:::1;1740:289:::0;:::o;225:31::-;;;;:::o;1236:155::-;565:6;;;;;;;;;;;551:20;;:10;:20;;;547:72;;595:12;;;;;;;;;;;;;;547:72;1291:22:::1;835:6;826:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;822:69;;865:14;;;;;;;;;;;;;;822:69;1326:8:::2;;;;;;;;;;;:17;;:24;1344:5;;1326:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;1369:14;1361:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;629:1:::1;1236:155::o:0;156:29::-;;;;;;;;;;;;;:::o;1572:162::-;697:8;;;;;;;;;;;683:22;;:10;:22;;;679:76;;729:14;;;;;;;;;;;;;;679:76;1636:22:::1;835:6;826:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;822:69;;865:14;;;;;;;;;;;;;;822:69;1679:14:::2;1671:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1704:6;;;;;;;;;;;:15;;:22;1720:5;;1704:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;765:1:::1;1572:162::o:0;377:18::-;;;;;;;;;;;;;:::o;118:31::-;;;;;;;;;;;;;:::o;1104:126::-;697:8;;;;;;;;;;;683:22;;:10;:22;;;679:76;;729:14;;;;;;;;;;;;;;679:76;1160:19:::1;835:6;826:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;822:69;;865:14;;;;;;;;;;;;;;822:69;1200:22:::2;1192:5;;:30;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;765:1:::1;1104:126::o:0;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:104::-;1554:7;1583:24;1601:5;1583:24;:::i;:::-;1572:35;;1509:104;;;:::o;1619:142::-;1722:32;1748:5;1722:32;:::i;:::-;1717:3;1710:45;1619:142;;:::o;1767:254::-;1876:4;1914:2;1903:9;1899:18;1891:26;;1927:87;2011:1;2000:9;1996:17;1987:6;1927:87;:::i;:::-;1767:254;;;;:::o;2027:180::-;2075:77;2072:1;2065:88;2172:4;2169:1;2162:15;2196:4;2193:1;2186:15;2213:113;2294:1;2287:5;2284:12;2274:46;;2300:18;;:::i;:::-;2274:46;2213:113;:::o;2332:127::-;2377:7;2406:5;2395:16;;2412:41;2447:5;2412:41;:::i;:::-;2332:127;;;:::o;2465:::-;2521:9;2554:32;2580:5;2554:32;:::i;:::-;2541:45;;2465:127;;;:::o;2598:143::-;2691:43;2728:5;2691:43;:::i;:::-;2686:3;2679:56;2598:143;;:::o;2747:234::-;2846:4;2884:2;2873:9;2869:18;2861:26;;2897:77;2971:1;2960:9;2956:17;2947:6;2897:77;:::i;:::-;2747:234;;;;:::o;2987:180::-;3035:77;3032:1;3025:88;3132:4;3129:1;3122:15;3156:4;3153:1;3146:15;3173:348;3213:7;3236:20;3254:1;3236:20;:::i;:::-;3231:25;;3270:20;3288:1;3270:20;:::i;:::-;3265:25;;3458:1;3390:66;3386:74;3383:1;3380:81;3375:1;3368:9;3361:17;3357:105;3354:131;;;3465:18;;:::i;:::-;3354:131;3513:1;3510;3506:9;3495:20;;3173:348;;;;:::o;3527:191::-;3567:4;3587:20;3605:1;3587:20;:::i;:::-;3582:25;;3621:20;3639:1;3621:20;:::i;:::-;3616:25;;3660:1;3657;3654:8;3651:34;;;3665:18;;:::i;:::-;3651:34;3710:1;3707;3703:9;3695:17;;3527:191;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.11;\r\n\r\ncontract RentalDeposit {\r\n    uint256 public value;\r\n    address payable public landlord;\r\n    address payable public tenant;\r\n    uint256 public _claimValue;\r\n    uint256 public remainingDeposit;\r\n\r\n    enum State {\r\n        Created,\r\n        TenantOffered,\r\n        LandlordAccepted,\r\n        Inactive\r\n    }\r\n    State public state;\r\n\r\n    constructor() payable {\r\n        landlord = payable(msg.sender);\r\n        // value = msg.value;\r\n    }\r\n\r\n    modifier onlyTenant() {\r\n        if (msg.sender != tenant) {\r\n            revert OnlyTenant();\r\n        }\r\n        _;\r\n    }\r\n    modifier onlyLandlord() {\r\n        if (msg.sender != landlord) {\r\n            revert OnlyLandlord();\r\n        }\r\n        _;\r\n    }\r\n    modifier inState(State state_) {\r\n        if (state != state_) {\r\n            revert InvalidState();\r\n        }\r\n        _;\r\n    }\r\n    \r\n    function tenantOffer() external payable inState(State.Created) {\r\n        value = msg.value;\r\n        tenant = payable(msg.sender);\r\n        state = State.TenantOffered;\r\n    }\r\n    function landlordAccept() external onlyLandlord inState(State.TenantOffered) {\r\n        state = State.LandlordAccepted;\r\n    }\r\n    function tenantTerminate() external onlyTenant inState(State.LandlordAccepted) {\r\n        landlord.transfer(value);\r\n        state = State.Inactive;\r\n    }\r\n    // function landlordTerminate() external onlyLandlord inState(State.LandlordAccepted) {\r\n    //     tenant.transfer(value);\r\n    //     state = State.Inactive;\r\n    // }\r\n    function releaseDepositToTenant() external onlyLandlord inState(State.LandlordAccepted) {\r\n        state = State.Inactive;\r\n        tenant.transfer(value);\r\n    }\r\n    function damageClaim(uint256 _damageValue) external onlyLandlord inState(State.LandlordAccepted) {\r\n        _claimValue = (_damageValue * 10**18);\r\n        remainingDeposit = value - (_claimValue);\r\n        landlord.transfer(_claimValue);\r\n        tenant.transfer(remainingDeposit);\r\n    }\r\n}\r\n\r\n/// The function cannot be called at the current state.\r\nerror InvalidState();\r\n///  Ony the tenant can call this function\r\nerror OnlyTenant();\r\n///  Ony the landlord can call this function\r\nerror OnlyLandlord();\r\n",
  "sourcePath": "C:\\Users\\w.lee\\OneDrive\\Desktop\\smartcontract\\rentaldeposit2\\contract\\contracts\\RentalDeposit.sol",
  "ast": {
    "absolutePath": "project:/contracts/RentalDeposit.sol",
    "exportedSymbols": {
      "InvalidState": [
        199
      ],
      "OnlyLandlord": [
        205
      ],
      "OnlyTenant": [
        202
      ],
      "RentalDeposit": [
        196
      ]
    },
    "id": 206,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "RentalDeposit",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 196,
        "linearizedBaseContracts": [
          196
        ],
        "name": "RentalDeposit",
        "nameLocation": "70:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 3,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "106:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "91:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "91:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dc1997ea",
            "id": 5,
            "mutability": "mutable",
            "name": "landlord",
            "nameLocation": "141:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "118:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "118:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "adf07791",
            "id": 7,
            "mutability": "mutable",
            "name": "tenant",
            "nameLocation": "179:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "156:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "156:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "046b75fb",
            "id": 9,
            "mutability": "mutable",
            "name": "_claimValue",
            "nameLocation": "207:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "192:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "192:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "758c6dbf",
            "id": 11,
            "mutability": "mutable",
            "name": "remainingDeposit",
            "nameLocation": "240:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "225:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "225:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RentalDeposit.State",
            "id": 16,
            "members": [
              {
                "id": 12,
                "name": "Created",
                "nameLocation": "287:7:0",
                "nodeType": "EnumValue",
                "src": "287:7:0"
              },
              {
                "id": 13,
                "name": "TenantOffered",
                "nameLocation": "305:13:0",
                "nodeType": "EnumValue",
                "src": "305:13:0"
              },
              {
                "id": 14,
                "name": "LandlordAccepted",
                "nameLocation": "329:16:0",
                "nodeType": "EnumValue",
                "src": "329:16:0"
              },
              {
                "id": 15,
                "name": "Inactive",
                "nameLocation": "356:8:0",
                "nodeType": "EnumValue",
                "src": "356:8:0"
              }
            ],
            "name": "State",
            "nameLocation": "270:5:0",
            "nodeType": "EnumDefinition",
            "src": "265:106:0"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 19,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "390:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "377:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$16",
              "typeString": "enum RentalDeposit.State"
            },
            "typeName": {
              "id": 18,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 17,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16,
                "src": "377:5:0"
              },
              "referencedDeclaration": 16,
              "src": "377:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$16",
                "typeString": "enum RentalDeposit.State"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "426:80:0",
              "statements": [
                {
                  "expression": {
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22,
                      "name": "landlord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "437:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 25,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "456:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "456:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "448:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "448:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "437:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "437:30:0"
                }
              ]
            },
            "id": 31,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "426:0:0"
            },
            "scope": 196,
            "src": "404:102:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "536:102:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 33,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "551:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "551:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 35,
                      "name": "tenant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "565:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "551:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41,
                  "nodeType": "IfStatement",
                  "src": "547:72:0",
                  "trueBody": {
                    "id": 40,
                    "nodeType": "Block",
                    "src": "573:46:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37,
                            "name": "OnlyTenant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "595:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "595:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39,
                        "nodeType": "RevertStatement",
                        "src": "588:19:0"
                      }
                    ]
                  }
                },
                {
                  "id": 42,
                  "nodeType": "PlaceholderStatement",
                  "src": "629:1:0"
                }
              ]
            },
            "id": 44,
            "name": "onlyTenant",
            "nameLocation": "523:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:2:0"
            },
            "src": "514:124:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "668:106:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 46,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "683:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "683:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 48,
                      "name": "landlord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "697:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "683:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54,
                  "nodeType": "IfStatement",
                  "src": "679:76:0",
                  "trueBody": {
                    "id": 53,
                    "nodeType": "Block",
                    "src": "707:48:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 50,
                            "name": "OnlyLandlord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 205,
                            "src": "729:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "729:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "RevertStatement",
                        "src": "722:21:0"
                      }
                    ]
                  }
                },
                {
                  "id": 55,
                  "nodeType": "PlaceholderStatement",
                  "src": "765:1:0"
                }
              ]
            },
            "id": 57,
            "name": "onlyLandlord",
            "nameLocation": "653:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:2:0"
            },
            "src": "644:130:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "811:99:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "826:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$16",
                        "typeString": "enum RentalDeposit.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 63,
                      "name": "state_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "835:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$16",
                        "typeString": "enum RentalDeposit.State"
                      }
                    },
                    "src": "826:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 69,
                  "nodeType": "IfStatement",
                  "src": "822:69:0",
                  "trueBody": {
                    "id": 68,
                    "nodeType": "Block",
                    "src": "843:48:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 65,
                            "name": "InvalidState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "865:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "865:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67,
                        "nodeType": "RevertStatement",
                        "src": "858:21:0"
                      }
                    ]
                  }
                },
                {
                  "id": 70,
                  "nodeType": "PlaceholderStatement",
                  "src": "901:1:0"
                }
              ]
            },
            "id": 72,
            "name": "inState",
            "nameLocation": "789:7:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "803:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "797:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$16",
                    "typeString": "enum RentalDeposit.State"
                  },
                  "typeName": {
                    "id": 59,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16,
                      "src": "797:5:0"
                    },
                    "referencedDeclaration": 16,
                    "src": "797:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:14:0"
            },
            "src": "780:130:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "985:113:0",
              "statements": [
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "996:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 80,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1004:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1004:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "996:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "996:17:0"
                },
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "tenant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1024:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 87,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1041:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1041:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1033:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1033:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1033:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1024:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:28:0"
                },
                {
                  "expression": {
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1063:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$16",
                        "typeString": "enum RentalDeposit.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 93,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1071:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$16_$",
                          "typeString": "type(enum RentalDeposit.State)"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "TenantOffered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1071:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$16",
                        "typeString": "enum RentalDeposit.State"
                      }
                    },
                    "src": "1063:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:27:0"
                }
              ]
            },
            "functionSelector": "1caed6d4",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 75,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "970:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$16_$",
                        "typeString": "type(enum RentalDeposit.State)"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12,
                    "src": "970:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    }
                  }
                ],
                "id": 77,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "962:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "962:22:0"
              }
            ],
            "name": "tenantOffer",
            "nameLocation": "931:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "942:2:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:0:0"
            },
            "scope": 196,
            "src": "922:176:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1181:49:0",
              "statements": [
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1192:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$16",
                        "typeString": "enum RentalDeposit.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 108,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1200:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$16_$",
                          "typeString": "type(enum RentalDeposit.State)"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "LandlordAccepted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "1200:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$16",
                        "typeString": "enum RentalDeposit.State"
                      }
                    },
                    "src": "1192:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1192:30:0"
                }
              ]
            },
            "functionSelector": "fb531a4f",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 101,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100,
                  "name": "onlyLandlord",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57,
                  "src": "1139:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1139:12:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 103,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1160:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$16_$",
                        "typeString": "type(enum RentalDeposit.State)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "TenantOffered",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13,
                    "src": "1160:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    }
                  }
                ],
                "id": 105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "1152:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1152:28:0"
              }
            ],
            "name": "landlordAccept",
            "nameLocation": "1113:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1127:2:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:0:0"
            },
            "scope": 196,
            "src": "1104:126:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1315:76:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1344:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 122,
                        "name": "landlord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "1326:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1326:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1326:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1326:24:0"
                },
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1361:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$16",
                        "typeString": "enum RentalDeposit.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 129,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1369:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$16_$",
                          "typeString": "type(enum RentalDeposit.State)"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1369:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$16",
                        "typeString": "enum RentalDeposit.State"
                      }
                    },
                    "src": "1361:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:22:0"
                }
              ]
            },
            "functionSelector": "98976094",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 115,
                  "name": "onlyTenant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44,
                  "src": "1272:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1272:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 118,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1291:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$16_$",
                        "typeString": "type(enum RentalDeposit.State)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "LandlordAccepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14,
                    "src": "1291:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    }
                  }
                ],
                "id": 120,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 117,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "1283:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1283:31:0"
              }
            ],
            "name": "tenantTerminate",
            "nameLocation": "1245:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1260:2:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:0:0"
            },
            "scope": 196,
            "src": "1236:155:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1660:74:0",
              "statements": [
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 143,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1671:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$16",
                        "typeString": "enum RentalDeposit.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 144,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1679:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$16_$",
                          "typeString": "type(enum RentalDeposit.State)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1679:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$16",
                        "typeString": "enum RentalDeposit.State"
                      }
                    },
                    "src": "1671:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 151,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1720:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 148,
                        "name": "tenant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1704:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1704:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:22:0"
                }
              ]
            },
            "functionSelector": "bb069225",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 137,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 136,
                  "name": "onlyLandlord",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57,
                  "src": "1615:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1615:12:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 139,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1636:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$16_$",
                        "typeString": "type(enum RentalDeposit.State)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "LandlordAccepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14,
                    "src": "1636:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    }
                  }
                ],
                "id": 141,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 138,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "1628:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1628:31:0"
              }
            ],
            "name": "releaseDepositToTenant",
            "nameLocation": "1581:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1603:2:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1660:0:0"
            },
            "scope": 196,
            "src": "1572:162:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "1837:192:0",
              "statements": [
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 166,
                      "name": "_claimValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1848:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 167,
                            "name": "_damageValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "1863:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1878:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1882:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1878:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1863:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 172,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1862:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1848:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1848:37:0"
                },
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 175,
                      "name": "remainingDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1896:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 176,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1915:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "id": 177,
                            "name": "_claimValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "1924:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 178,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1923:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1915:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1896:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 185,
                        "name": "_claimValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1965:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 182,
                        "name": "landlord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "1947:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1947:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1947:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "1947:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 191,
                        "name": "remainingDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2004:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 188,
                        "name": "tenant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1988:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1988:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1988:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:33:0"
                }
              ]
            },
            "functionSelector": "546eab0b",
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 160,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 159,
                  "name": "onlyLandlord",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57,
                  "src": "1792:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1792:12:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 162,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1813:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$16_$",
                        "typeString": "type(enum RentalDeposit.State)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "LandlordAccepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14,
                    "src": "1813:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$16",
                      "typeString": "enum RentalDeposit.State"
                    }
                  }
                ],
                "id": 164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 161,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "1805:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1805:31:0"
              }
            ],
            "name": "damageClaim",
            "nameLocation": "1749:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "_damageValue",
                  "nameLocation": "1769:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "1761:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1761:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1760:22:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:0"
            },
            "scope": 196,
            "src": "1740:289:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 206,
        "src": "61:1971:0",
        "usedErrors": [
          199,
          202,
          205
        ]
      },
      {
        "documentation": {
          "id": 197,
          "nodeType": "StructuredDocumentation",
          "src": "2036:57:0",
          "text": "The function cannot be called at the current state."
        },
        "id": 199,
        "name": "InvalidState",
        "nameLocation": "2099:12:0",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 198,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2111:2:0"
        },
        "src": "2093:21:0"
      },
      {
        "documentation": {
          "id": 200,
          "nodeType": "StructuredDocumentation",
          "src": "2116:44:0",
          "text": "Ony the tenant can call this function"
        },
        "id": 202,
        "name": "OnlyTenant",
        "nameLocation": "2166:10:0",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 201,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2176:2:0"
        },
        "src": "2160:19:0"
      },
      {
        "documentation": {
          "id": 203,
          "nodeType": "StructuredDocumentation",
          "src": "2181:46:0",
          "text": "Ony the landlord can call this function"
        },
        "id": 205,
        "name": "OnlyLandlord",
        "nameLocation": "2233:12:0",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 204,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2245:2:0"
        },
        "src": "2227:21:0"
      }
    ],
    "src": "33:2217:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0xb0F2b3d7B5fB86a322696e956defEBb575DBb6a0",
      "transactionHash": "0x2f060c48cb565e6b3dd24edad7f4b47709ea6011e4ca8c1933df43f8136cb7c2"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-10-16T07:37:21.666Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidState()": [
        {
          "notice": "The function cannot be called at the current state."
        }
      ],
      "OnlyLandlord()": [
        {
          "notice": "Ony the landlord can call this function"
        }
      ],
      "OnlyTenant()": [
        {
          "notice": "Ony the tenant can call this function"
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}